//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RefinanciamientoKon.ConnectionBroker {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ConnectionBroker.IDataManager")]
    public interface IDataManager {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataManager/OpenConnection", ReplyAction="http://tempuri.org/IDataManager/OpenConnectionResponse")]
        bool OpenConnection();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataManager/OpenConnection", ReplyAction="http://tempuri.org/IDataManager/OpenConnectionResponse")]
        System.Threading.Tasks.Task<bool> OpenConnectionAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataManager/ExecuteCommand", ReplyAction="http://tempuri.org/IDataManager/ExecuteCommandResponse")]
        bool ExecuteCommand(string SQLStatement);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataManager/ExecuteCommand", ReplyAction="http://tempuri.org/IDataManager/ExecuteCommandResponse")]
        System.Threading.Tasks.Task<bool> ExecuteCommandAsync(string SQLStatement);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataManager/GetDataSet", ReplyAction="http://tempuri.org/IDataManager/GetDataSetResponse")]
        System.Data.DataSet GetDataSet(string lstrSQLStatement, string lstrDataSetName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataManager/GetDataSet", ReplyAction="http://tempuri.org/IDataManager/GetDataSetResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetDataSetAsync(string lstrSQLStatement, string lstrDataSetName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataManager/setConnectionString", ReplyAction="http://tempuri.org/IDataManager/setConnectionStringResponse")]
        void setConnectionString(string ConnectionString);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataManager/setConnectionString", ReplyAction="http://tempuri.org/IDataManager/setConnectionStringResponse")]
        System.Threading.Tasks.Task setConnectionStringAsync(string ConnectionString);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataManager/setApplicationName", ReplyAction="http://tempuri.org/IDataManager/setApplicationNameResponse")]
        void setApplicationName(string ApplicationName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataManager/setApplicationName", ReplyAction="http://tempuri.org/IDataManager/setApplicationNameResponse")]
        System.Threading.Tasks.Task setApplicationNameAsync(string ApplicationName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataManager/setReturnIdentity", ReplyAction="http://tempuri.org/IDataManager/setReturnIdentityResponse")]
        void setReturnIdentity(bool ReturnIdentity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataManager/setReturnIdentity", ReplyAction="http://tempuri.org/IDataManager/setReturnIdentityResponse")]
        System.Threading.Tasks.Task setReturnIdentityAsync(bool ReturnIdentity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataManager/getIdentityValue", ReplyAction="http://tempuri.org/IDataManager/getIdentityValueResponse")]
        int getIdentityValue();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataManager/getIdentityValue", ReplyAction="http://tempuri.org/IDataManager/getIdentityValueResponse")]
        System.Threading.Tasks.Task<int> getIdentityValueAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataManager/Finalize", ReplyAction="http://tempuri.org/IDataManager/FinalizeResponse")]
        void Finalize();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataManager/Finalize", ReplyAction="http://tempuri.org/IDataManager/FinalizeResponse")]
        System.Threading.Tasks.Task FinalizeAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDataManagerChannel : RefinanciamientoKon.ConnectionBroker.IDataManager, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DataManagerClient : System.ServiceModel.ClientBase<RefinanciamientoKon.ConnectionBroker.IDataManager>, RefinanciamientoKon.ConnectionBroker.IDataManager {
        
        public DataManagerClient() {
        }
        
        public DataManagerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DataManagerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DataManagerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DataManagerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool OpenConnection() {
            return base.Channel.OpenConnection();
        }
        
        public System.Threading.Tasks.Task<bool> OpenConnectionAsync() {
            return base.Channel.OpenConnectionAsync();
        }
        
        public bool ExecuteCommand(string SQLStatement) {
            return base.Channel.ExecuteCommand(SQLStatement);
        }
        
        public System.Threading.Tasks.Task<bool> ExecuteCommandAsync(string SQLStatement) {
            return base.Channel.ExecuteCommandAsync(SQLStatement);
        }
        
        public System.Data.DataSet GetDataSet(string lstrSQLStatement, string lstrDataSetName) {
            return base.Channel.GetDataSet(lstrSQLStatement, lstrDataSetName);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetDataSetAsync(string lstrSQLStatement, string lstrDataSetName) {
            return base.Channel.GetDataSetAsync(lstrSQLStatement, lstrDataSetName);
        }
        
        public void setConnectionString(string ConnectionString) {
            base.Channel.setConnectionString(ConnectionString);
        }
        
        public System.Threading.Tasks.Task setConnectionStringAsync(string ConnectionString) {
            return base.Channel.setConnectionStringAsync(ConnectionString);
        }
        
        public void setApplicationName(string ApplicationName) {
            base.Channel.setApplicationName(ApplicationName);
        }
        
        public System.Threading.Tasks.Task setApplicationNameAsync(string ApplicationName) {
            return base.Channel.setApplicationNameAsync(ApplicationName);
        }
        
        public void setReturnIdentity(bool ReturnIdentity) {
            base.Channel.setReturnIdentity(ReturnIdentity);
        }
        
        public System.Threading.Tasks.Task setReturnIdentityAsync(bool ReturnIdentity) {
            return base.Channel.setReturnIdentityAsync(ReturnIdentity);
        }
        
        public int getIdentityValue() {
            return base.Channel.getIdentityValue();
        }
        
        public System.Threading.Tasks.Task<int> getIdentityValueAsync() {
            return base.Channel.getIdentityValueAsync();
        }
        
        public void Finalize() {
            base.Channel.Finalize();
        }
        
        public System.Threading.Tasks.Task FinalizeAsync() {
            return base.Channel.FinalizeAsync();
        }
    }
}
